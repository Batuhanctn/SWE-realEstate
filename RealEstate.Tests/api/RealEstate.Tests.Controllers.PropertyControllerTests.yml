### YamlMime:ManagedReference
items:
- uid: RealEstate.Tests.Controllers.PropertyControllerTests
  commentId: T:RealEstate.Tests.Controllers.PropertyControllerTests
  id: PropertyControllerTests
  parent: RealEstate.Tests.Controllers
  children:
  - RealEstate.Tests.Controllers.PropertyControllerTests.#ctor
  - RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists
  - RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  - RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  - RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists
  - RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  - RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties
  - RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  - RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties
  - RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists
  - RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist
  langs:
  - csharp
  - vb
  name: PropertyControllerTests
  nameWithType: PropertyControllerTests
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests
  type: Class
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: PropertyControllerTests
    path: Controllers/PropertyControllerTests.cs
    startLine: 14
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: >-
    Test suite for PropertyController

    Contains unit tests for property-related operations
  example: []
  syntax:
    content: public class PropertyControllerTests
    content.vb: Public Class PropertyControllerTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.#ctor
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.#ctor
  id: '#ctor'
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: PropertyControllerTests()
  nameWithType: PropertyControllerTests.PropertyControllerTests()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.PropertyControllerTests()
  type: Constructor
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: .ctor
    path: Controllers/PropertyControllerTests.cs
    startLine: 24
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: >-
    Initializes a new instance of PropertyControllerTests

    Sets up mocks and controller instance for testing
  example: []
  syntax:
    content: public PropertyControllerTests()
    content.vb: Public Sub New()
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.#ctor*
  nameWithType.vb: PropertyControllerTests.New()
  fullName.vb: RealEstate.Tests.Controllers.PropertyControllerTests.New()
  name.vb: New()
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties
  id: Get_ReturnsOkResult_WithListOfProperties
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Get_ReturnsOkResult_WithListOfProperties()
  nameWithType: PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Get_ReturnsOkResult_WithListOfProperties
    path: Controllers/PropertyControllerTests.cs
    startLine: 34
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that GetAsync returns all properties successfully
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Get_ReturnsOkResult_WithListOfProperties()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Get_ReturnsOkResult_WithListOfProperties() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists
  id: GetById_ReturnsOkResult_WhenPropertyExists
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: GetById_ReturnsOkResult_WhenPropertyExists()
  nameWithType: PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: GetById_ReturnsOkResult_WhenPropertyExists
    path: Controllers/PropertyControllerTests.cs
    startLine: 61
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that GetAsync with ID returns specific property
  example: []
  syntax:
    content: >-
      [Fact]

      public Task GetById_ReturnsOkResult_WhenPropertyExists()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetById_ReturnsOkResult_WhenPropertyExists() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  id: GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: GetById_ReturnsNotFound_WhenPropertyDoesNotExist()
  nameWithType: PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: GetById_ReturnsNotFound_WhenPropertyDoesNotExist
    path: Controllers/PropertyControllerTests.cs
    startLine: 88
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that GetAsync with ID returns NotFound when property does not exist
  example: []
  syntax:
    content: >-
      [Fact]

      public Task GetById_ReturnsNotFound_WhenPropertyDoesNotExist()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetById_ReturnsNotFound_WhenPropertyDoesNotExist() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  id: Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Post_ReturnsCreatedAtAction_WhenPropertyIsValid()
  nameWithType: PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Post_ReturnsCreatedAtAction_WhenPropertyIsValid
    path: Controllers/PropertyControllerTests.cs
    startLine: 106
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that PostAsync creates property successfully
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Post_ReturnsCreatedAtAction_WhenPropertyIsValid()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Post_ReturnsCreatedAtAction_WhenPropertyIsValid() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists
  id: Update_ReturnsNoContent_WhenPropertyExists
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Update_ReturnsNoContent_WhenPropertyExists()
  nameWithType: PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Update_ReturnsNoContent_WhenPropertyExists
    path: Controllers/PropertyControllerTests.cs
    startLine: 134
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that UpdateAsync updates property successfully
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Update_ReturnsNoContent_WhenPropertyExists()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Update_ReturnsNoContent_WhenPropertyExists() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist
  id: Update_ReturnsNotFound_WhenPropertyDoesNotExist
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Update_ReturnsNotFound_WhenPropertyDoesNotExist()
  nameWithType: PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Update_ReturnsNotFound_WhenPropertyDoesNotExist
    path: Controllers/PropertyControllerTests.cs
    startLine: 165
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that UpdateAsync returns NotFound when property does not exist
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Update_ReturnsNotFound_WhenPropertyDoesNotExist()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Update_ReturnsNotFound_WhenPropertyDoesNotExist() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists
  id: Delete_ReturnsNoContent_WhenPropertyExists
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Delete_ReturnsNoContent_WhenPropertyExists()
  nameWithType: PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Delete_ReturnsNoContent_WhenPropertyExists
    path: Controllers/PropertyControllerTests.cs
    startLine: 188
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that DeleteAsync removes property successfully
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Delete_ReturnsNoContent_WhenPropertyExists()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Delete_ReturnsNoContent_WhenPropertyExists() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  id: Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Delete_ReturnsNotFound_WhenPropertyDoesNotExist()
  nameWithType: PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Delete_ReturnsNotFound_WhenPropertyDoesNotExist
    path: Controllers/PropertyControllerTests.cs
    startLine: 214
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that DeleteAsync returns NotFound when property does not exist
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Delete_ReturnsNotFound_WhenPropertyDoesNotExist()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Delete_ReturnsNotFound_WhenPropertyDoesNotExist() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties
  id: Search_ReturnsOkResult_WithMatchingProperties
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: Search_ReturnsOkResult_WithMatchingProperties()
  nameWithType: PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Search_ReturnsOkResult_WithMatchingProperties
    path: Controllers/PropertyControllerTests.cs
    startLine: 232
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that SearchAsync returns properties by location
  example: []
  syntax:
    content: >-
      [Fact]

      public Task Search_ReturnsOkResult_WithMatchingProperties()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Search_ReturnsOkResult_WithMatchingProperties() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  commentId: M:RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  id: GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  parent: RealEstate.Tests.Controllers.PropertyControllerTests
  langs:
  - csharp
  - vb
  name: GetByPriceRange_ReturnsOkResult_WithPropertiesInRange()
  nameWithType: PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange()
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange()
  type: Method
  source:
    remote:
      path: RealEstate.Tests/Controllers/PropertyControllerTests.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
    path: Controllers/PropertyControllerTests.cs
    startLine: 259
  assemblies:
  - RealEstate.Tests
  namespace: RealEstate.Tests.Controllers
  summary: Tests that GetByPriceRangeAsync returns properties within price range
  example: []
  syntax:
    content: >-
      [Fact]

      public Task GetByPriceRange_ReturnsOkResult_WithPropertiesInRange()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetByPriceRange_ReturnsOkResult_WithPropertiesInRange() As Task
  overload: RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: RealEstate.Tests.Controllers
  commentId: N:RealEstate.Tests.Controllers
  href: RealEstate.html
  name: RealEstate.Tests.Controllers
  nameWithType: RealEstate.Tests.Controllers
  fullName: RealEstate.Tests.Controllers
  spec.csharp:
  - uid: RealEstate
    name: RealEstate
    href: RealEstate.html
  - name: .
  - uid: RealEstate.Tests
    name: Tests
    href: RealEstate.Tests.html
  - name: .
  - uid: RealEstate.Tests.Controllers
    name: Controllers
    href: RealEstate.Tests.Controllers.html
  spec.vb:
  - uid: RealEstate
    name: RealEstate
    href: RealEstate.html
  - name: .
  - uid: RealEstate.Tests
    name: Tests
    href: RealEstate.Tests.html
  - name: .
  - uid: RealEstate.Tests.Controllers
    name: Controllers
    href: RealEstate.Tests.Controllers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.#ctor*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.#ctor
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests__ctor
  name: PropertyControllerTests
  nameWithType: PropertyControllerTests.PropertyControllerTests
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.PropertyControllerTests
  nameWithType.vb: PropertyControllerTests.New
  fullName.vb: RealEstate.Tests.Controllers.PropertyControllerTests.New
  name.vb: New
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Get_ReturnsOkResult_WithListOfProperties
  name: Get_ReturnsOkResult_WithListOfProperties
  nameWithType: PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Get_ReturnsOkResult_WithListOfProperties
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_GetById_ReturnsOkResult_WhenPropertyExists
  name: GetById_ReturnsOkResult_WhenPropertyExists
  nameWithType: PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsOkResult_WhenPropertyExists
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  name: GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  nameWithType: PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.GetById_ReturnsNotFound_WhenPropertyDoesNotExist
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  name: Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  nameWithType: PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Post_ReturnsCreatedAtAction_WhenPropertyIsValid
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Update_ReturnsNoContent_WhenPropertyExists
  name: Update_ReturnsNoContent_WhenPropertyExists
  nameWithType: PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNoContent_WhenPropertyExists
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Update_ReturnsNotFound_WhenPropertyDoesNotExist
  name: Update_ReturnsNotFound_WhenPropertyDoesNotExist
  nameWithType: PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Update_ReturnsNotFound_WhenPropertyDoesNotExist
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Delete_ReturnsNoContent_WhenPropertyExists
  name: Delete_ReturnsNoContent_WhenPropertyExists
  nameWithType: PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNoContent_WhenPropertyExists
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  name: Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  nameWithType: PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Delete_ReturnsNotFound_WhenPropertyDoesNotExist
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_Search_ReturnsOkResult_WithMatchingProperties
  name: Search_ReturnsOkResult_WithMatchingProperties
  nameWithType: PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.Search_ReturnsOkResult_WithMatchingProperties
- uid: RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange*
  commentId: Overload:RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  href: RealEstate.Tests.Controllers.PropertyControllerTests.html#RealEstate_Tests_Controllers_PropertyControllerTests_GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  name: GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  nameWithType: PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
  fullName: RealEstate.Tests.Controllers.PropertyControllerTests.GetByPriceRange_ReturnsOkResult_WithPropertiesInRange
