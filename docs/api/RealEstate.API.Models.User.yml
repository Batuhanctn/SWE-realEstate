### YamlMime:ManagedReference
items:
- uid: RealEstate.API.Models.User
  commentId: T:RealEstate.API.Models.User
  id: User
  parent: RealEstate.API.Models
  children:
  - RealEstate.API.Models.User.CreatedAt
  - RealEstate.API.Models.User.Email
  - RealEstate.API.Models.User.FirstName
  - RealEstate.API.Models.User.Id
  - RealEstate.API.Models.User.LastName
  - RealEstate.API.Models.User.PasswordHash
  - RealEstate.API.Models.User.PhoneNumber
  - RealEstate.API.Models.User.Properties
  - RealEstate.API.Models.User.UpdatedAt
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: RealEstate.API.Models.User
  type: Class
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: User
    path: ../RealEstate.API/Models/User.cs
    startLine: 9
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Represents a user in the system
  example: []
  syntax:
    content: public class User
    content.vb: Public Class User
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RealEstate.API.Models.User.Id
  commentId: P:RealEstate.API.Models.User.Id
  id: Id
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: User.Id
  fullName: RealEstate.API.Models.User.Id
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Id
    path: ../RealEstate.API/Models/User.cs
    startLine: 14
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the unique identifier for the user
  example: []
  syntax:
    content: >-
      [BsonId]

      [BsonRepresentation(BsonType.ObjectId)]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonId>

      <BsonRepresentation(BsonType.ObjectId)>

      Public Property Id As String
  overload: RealEstate.API.Models.User.Id*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.#ctor
    arguments: []
  - type: MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.#ctor(MongoDB.Bson.BsonType)
    arguments:
    - type: MongoDB.Bson.BsonType
      value: 7
- uid: RealEstate.API.Models.User.Email
  commentId: P:RealEstate.API.Models.User.Email
  id: Email
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: User.Email
  fullName: RealEstate.API.Models.User.Email
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Email
    path: ../RealEstate.API/Models/User.cs
    startLine: 22
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: >-
    Gets or sets the user's email address

    Used for authentication and communication
  example: []
  syntax:
    content: >-
      [BsonElement("email")]

      [Required]

      [EmailAddress]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("email")>

      <Required>

      <EmailAddress>

      Public Property Email As String
  overload: RealEstate.API.Models.User.Email*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: email
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
    arguments: []
- uid: RealEstate.API.Models.User.PasswordHash
  commentId: P:RealEstate.API.Models.User.PasswordHash
  id: PasswordHash
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: PasswordHash
  nameWithType: User.PasswordHash
  fullName: RealEstate.API.Models.User.PasswordHash
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: PasswordHash
    path: ../RealEstate.API/Models/User.cs
    startLine: 31
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: >-
    Gets or sets the user's password hash

    Stored as a secure hash, never as plain text
  example: []
  syntax:
    content: >-
      [BsonElement("passwordHash")]

      [Required]

      public string PasswordHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("passwordHash")>

      <Required>

      Public Property PasswordHash As String
  overload: RealEstate.API.Models.User.PasswordHash*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: passwordHash
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: RealEstate.API.Models.User.FirstName
  commentId: P:RealEstate.API.Models.User.FirstName
  id: FirstName
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: User.FirstName
  fullName: RealEstate.API.Models.User.FirstName
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: FirstName
    path: ../RealEstate.API/Models/User.cs
    startLine: 38
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the user's first name
  example: []
  syntax:
    content: >-
      [BsonElement("firstName")]

      [Required]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("firstName")>

      <Required>

      Public Property FirstName As String
  overload: RealEstate.API.Models.User.FirstName*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: firstName
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: RealEstate.API.Models.User.LastName
  commentId: P:RealEstate.API.Models.User.LastName
  id: LastName
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: User.LastName
  fullName: RealEstate.API.Models.User.LastName
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: LastName
    path: ../RealEstate.API/Models/User.cs
    startLine: 45
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the user's last name
  example: []
  syntax:
    content: >-
      [BsonElement("lastName")]

      [Required]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("lastName")>

      <Required>

      Public Property LastName As String
  overload: RealEstate.API.Models.User.LastName*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastName
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: RealEstate.API.Models.User.PhoneNumber
  commentId: P:RealEstate.API.Models.User.PhoneNumber
  id: PhoneNumber
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: User.PhoneNumber
  fullName: RealEstate.API.Models.User.PhoneNumber
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: PhoneNumber
    path: ../RealEstate.API/Models/User.cs
    startLine: 52
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the user's phone number
  example: []
  syntax:
    content: >-
      [BsonElement("phoneNumber")]

      [Required]

      [Phone]

      public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("phoneNumber")>

      <Required>

      <Phone>

      Public Property PhoneNumber As String
  overload: RealEstate.API.Models.User.PhoneNumber*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: phoneNumber
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.PhoneAttribute
    ctor: System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor
    arguments: []
- uid: RealEstate.API.Models.User.CreatedAt
  commentId: P:RealEstate.API.Models.User.CreatedAt
  id: CreatedAt
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: User.CreatedAt
  fullName: RealEstate.API.Models.User.CreatedAt
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: CreatedAt
    path: ../RealEstate.API/Models/User.cs
    startLine: 60
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the date when the user account was created
  example: []
  syntax:
    content: >-
      [BsonElement("createdAt")]

      public DateTime CreatedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <BsonElement("createdAt")>

      Public Property CreatedAt As Date
  overload: RealEstate.API.Models.User.CreatedAt*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdAt
- uid: RealEstate.API.Models.User.UpdatedAt
  commentId: P:RealEstate.API.Models.User.UpdatedAt
  id: UpdatedAt
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: User.UpdatedAt
  fullName: RealEstate.API.Models.User.UpdatedAt
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: UpdatedAt
    path: ../RealEstate.API/Models/User.cs
    startLine: 66
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the date when the user account was last updated
  example: []
  syntax:
    content: >-
      [BsonElement("updatedAt")]

      public DateTime? UpdatedAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <BsonElement("updatedAt")>

      Public Property UpdatedAt As Date?
  overload: RealEstate.API.Models.User.UpdatedAt*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updatedAt
- uid: RealEstate.API.Models.User.Properties
  commentId: P:RealEstate.API.Models.User.Properties
  id: Properties
  parent: RealEstate.API.Models.User
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: User.Properties
  fullName: RealEstate.API.Models.User.Properties
  type: Property
  source:
    remote:
      path: RealEstate.API/Models/User.cs
      branch: main
      repo: https://github.com/Batuhanctn/SWE-realEstate.git
    id: Properties
    path: ../RealEstate.API/Models/User.cs
    startLine: 72
  assemblies:
  - RealEstate.API
  namespace: RealEstate.API.Models
  summary: Gets or sets the properties owned by the user
  example: []
  syntax:
    content: >-
      [BsonElement("properties")]

      public List<Property> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RealEstate.API.Models.Property}
    content.vb: >-
      <BsonElement("properties")>

      Public Property Properties As List(Of [Property])
  overload: RealEstate.API.Models.User.Properties*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: properties
references:
- uid: RealEstate.API.Models
  commentId: N:RealEstate.API.Models
  href: RealEstate.html
  name: RealEstate.API.Models
  nameWithType: RealEstate.API.Models
  fullName: RealEstate.API.Models
  spec.csharp:
  - uid: RealEstate
    name: RealEstate
    href: RealEstate.html
  - name: .
  - uid: RealEstate.API
    name: API
    href: RealEstate.API.html
  - name: .
  - uid: RealEstate.API.Models
    name: Models
    href: RealEstate.API.Models.html
  spec.vb:
  - uid: RealEstate
    name: RealEstate
    href: RealEstate.html
  - name: .
  - uid: RealEstate.API
    name: API
    href: RealEstate.API.html
  - name: .
  - uid: RealEstate.API.Models
    name: Models
    href: RealEstate.API.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RealEstate.API.Models.User.Id*
  commentId: Overload:RealEstate.API.Models.User.Id
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_Id
  name: Id
  nameWithType: User.Id
  fullName: RealEstate.API.Models.User.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RealEstate.API.Models.User.Email*
  commentId: Overload:RealEstate.API.Models.User.Email
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_Email
  name: Email
  nameWithType: User.Email
  fullName: RealEstate.API.Models.User.Email
- uid: RealEstate.API.Models.User.PasswordHash*
  commentId: Overload:RealEstate.API.Models.User.PasswordHash
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_PasswordHash
  name: PasswordHash
  nameWithType: User.PasswordHash
  fullName: RealEstate.API.Models.User.PasswordHash
- uid: RealEstate.API.Models.User.FirstName*
  commentId: Overload:RealEstate.API.Models.User.FirstName
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_FirstName
  name: FirstName
  nameWithType: User.FirstName
  fullName: RealEstate.API.Models.User.FirstName
- uid: RealEstate.API.Models.User.LastName*
  commentId: Overload:RealEstate.API.Models.User.LastName
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_LastName
  name: LastName
  nameWithType: User.LastName
  fullName: RealEstate.API.Models.User.LastName
- uid: RealEstate.API.Models.User.PhoneNumber*
  commentId: Overload:RealEstate.API.Models.User.PhoneNumber
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_PhoneNumber
  name: PhoneNumber
  nameWithType: User.PhoneNumber
  fullName: RealEstate.API.Models.User.PhoneNumber
- uid: RealEstate.API.Models.User.CreatedAt*
  commentId: Overload:RealEstate.API.Models.User.CreatedAt
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_CreatedAt
  name: CreatedAt
  nameWithType: User.CreatedAt
  fullName: RealEstate.API.Models.User.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: RealEstate.API.Models.User.UpdatedAt*
  commentId: Overload:RealEstate.API.Models.User.UpdatedAt
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_UpdatedAt
  name: UpdatedAt
  nameWithType: User.UpdatedAt
  fullName: RealEstate.API.Models.User.UpdatedAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RealEstate.API.Models.User.Properties*
  commentId: Overload:RealEstate.API.Models.User.Properties
  href: RealEstate.API.Models.User.html#RealEstate_API_Models_User_Properties
  name: Properties
  nameWithType: User.Properties
  fullName: RealEstate.API.Models.User.Properties
- uid: System.Collections.Generic.List{RealEstate.API.Models.Property}
  commentId: T:System.Collections.Generic.List{RealEstate.API.Models.Property}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Property>
  nameWithType: List<Property>
  fullName: System.Collections.Generic.List<RealEstate.API.Models.Property>
  nameWithType.vb: List(Of Property)
  fullName.vb: System.Collections.Generic.List(Of RealEstate.API.Models.Property)
  name.vb: List(Of Property)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RealEstate.API.Models.Property
    name: Property
    href: RealEstate.API.Models.Property.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RealEstate.API.Models.Property
    name: Property
    href: RealEstate.API.Models.Property.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
